@page "/usuarios/editar/{UsuarioId}"
@inject IRepositorio repositorio
@inject SweetAlertService swal

<h3>Editar Usuario</h3>

@if (roles is null)
{
    <p>Cargando...</p>
}
else
{
    <div class="form-inline">
        <select class="form-select mb-2" @bind="rolSeleccionado">
            <option value="0">--Seleccione un rol--</option>
            @foreach (var rol in roles)
            {
                <option value="@rol.Nombre">@rol.Nombre</option>
            }
        </select>
        <button class="btn btn-info mb-2" @onclick="AsignarRol">Asignar Rol</button>
        <button class="btn btn-danger mb-2" @onclick="RemoverRol">Remover Rol</button>

    </div>
}

@code {
    [Parameter]
    public string UsuarioId { get; set; } = null!;
    private List<RolDTO>? roles;
    private string rolSeleccionado = "0";

    protected override async Task OnInitializedAsync()
    {
        var respuestaHTTP = await repositorio.Get<List<RolDTO>>($"api/usuarios/roles");

        if (respuestaHTTP.Error)
        {
            var mensajeError = await respuestaHTTP.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            roles = respuestaHTTP.Response;
        }
    }

    private async Task AsignarRol()
    {
        await EditarRol("api/usuarios/asignarRol");
    }

    private async Task RemoverRol()
    {
        await EditarRol("api/usuarios/removerRol");
    }

    private async Task EditarRol(string url)
    {
        if (rolSeleccionado == "0")
        {
            await swal.FireAsync("Error", "Debe seleccionar un rol", SweetAlertIcon.Error);
            return;
        }

        var rolDTO = new EditarRolDTO() { Rol = rolSeleccionado, UsuarioId = UsuarioId };
        var httpResponse = await repositorio.Post<EditarRolDTO>(url, rolDTO);

        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            await swal.FireAsync("Exitoso", "Operación realizada con éxito", SweetAlertIcon.Success);
        }
    }
}
